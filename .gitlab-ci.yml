image: jfrog.ncci.com/docker/node:14
cache:
  paths:
    - node_modules/
stages:
  - test
  - build
  - publish-container
variables:
  JFROG_REPOSITORY_PREFIX: "nasa"
  REGISTRY: https://jfrog.ncci.com/artifactory/api/npm/$JFROG_REPOSITORY_PREFIX-npm-prod/

test-app:
  tags:
    - docker
  stage: test
  script:
    - npm config set strict-ssl=false
    - npm config set registry $REGISTRY
    - npm config set @ncci:registry $REGISTRY
    - npm i
    - npm test -- --coverage
  coverage: '/Statements.*?(\d+(?:\.\d+)?)%/'
  allow_failure: false

build-artifact:
  tags:
    - docker
  stage: build
  script:
    - npm config set strict-ssl=false
    - npm config set @ncci:registry $REGISTRY
    - npm i
    - npm run build
  artifacts:
    name: '$CI_JOB_NAME'
    paths:
      - build

build-container:
  tags:
    - docker
  image: jfrog.ncci.com/docker/docker:18.09.9
  services:
    - name: jfrog.ncci.com/docker/docker:18.09.9-dind
      command: ["--insecure-registry=gitlab.ncci.com:5005", "--insecure-registry=jfrog.ncci.com"]
      alias: docker
  stage: publish-container
  script:
    - docker login -u "gitlab-ci-token" -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
